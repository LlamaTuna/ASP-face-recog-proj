<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="namespaceface__detection" kind="namespace" language="Python">
    <compoundname>face_detection</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceface__detection_1a0c237df4c13530e87b7893b88d0c404a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <qualifiedname>face_detection.filename</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="15" column="1" bodyfile="face_detection.py" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1ae8d8fe465dd8930a53ecdeb082298b20" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.filemode</definition>
        <argsstring></argsstring>
        <name>filemode</name>
        <qualifiedname>face_detection.filemode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="16" column="1" bodyfile="face_detection.py" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1a69bd8ebcb5415bffd6f32e85eb8ee11a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <qualifiedname>face_detection.level</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="17" column="1" bodyfile="face_detection.py" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1a04c4ca4480c1838401c0936d33096ecf" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <qualifiedname>face_detection.format</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="18" column="1" bodyfile="face_detection.py" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1a4fe6ffed259009b5df3ffae81fcd08c1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <qualifiedname>face_detection.logger</qualifiedname>
        <initializer>=  logging.getLogger()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="24" column="1" bodyfile="face_detection.py" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1ad74ed4d139862a3d5aa2af04b5477d35" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str face_detection.output_folder</definition>
        <argsstring></argsstring>
        <name>output_folder</name>
        <qualifiedname>face_detection.output_folder</qualifiedname>
        <initializer>=  &quot;./output/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="26" column="1" bodyfile="face_detection.py" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1a4b31a07c379b2bdaaffe760451d4a766" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.face_detector</definition>
        <argsstring></argsstring>
        <name>face_detector</name>
        <qualifiedname>face_detection.face_detector</qualifiedname>
        <initializer>=  MTCNN()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="27" column="1" bodyfile="face_detection.py" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceface__detection_1ada631b953bf3565f903d8b994c2f2931" prot="public" static="no" mutable="no">
        <type></type>
        <definition>face_detection.resnet_model</definition>
        <argsstring></argsstring>
        <name>resnet_model</name>
        <qualifiedname>face_detection.resnet_model</qualifiedname>
        <initializer>=  ResNet152(weights=&apos;imagenet&apos;, include_top=False)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="28" column="1" bodyfile="face_detection.py" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceface__detection_1a85abcfd5c6ba441f124adea60769ad7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>face_detection.get_image_exif_data</definition>
        <argsstring>(image_path)</argsstring>
        <name>get_image_exif_data</name>
        <qualifiedname>face_detection.get_image_exif_data</qualifiedname>
        <param>
          <type>image_path</type>
          <defname>image_path</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="34" column="1" bodyfile="face_detection.py" bodystart="34" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespaceface__detection_1a48a449463b19c72fdd388de1fc17820c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>face_detection.resize_image_with_aspect_ratio</definition>
        <argsstring>(img, size)</argsstring>
        <name>resize_image_with_aspect_ratio</name>
        <qualifiedname>face_detection.resize_image_with_aspect_ratio</qualifiedname>
        <param>
          <type>img</type>
          <defname>img</defname>
        </param>
        <param>
          <type>size</type>
          <defname>size</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="52" column="1" bodyfile="face_detection.py" bodystart="52" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceface__detection_1a372ee39ad03355ff6f1f3afd7bf68d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>face_detection.convert_image_to_vector</definition>
        <argsstring>(img)</argsstring>
        <name>convert_image_to_vector</name>
        <qualifiedname>face_detection.convert_image_to_vector</qualifiedname>
        <param>
          <type>img</type>
          <defname>img</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="88" column="1" bodyfile="face_detection.py" bodystart="88" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespaceface__detection_1a85ad83332b14063df9166560afe4ceb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>face_detection.save_faces_from_folder</definition>
        <argsstring>(folder_path, face_detector, output_folder, progress_callback=None)</argsstring>
        <name>save_faces_from_folder</name>
        <qualifiedname>face_detection.save_faces_from_folder</qualifiedname>
        <param>
          <type>folder_path</type>
          <defname>folder_path</defname>
        </param>
        <param>
          <type><ref refid="namespaceface__detection_1a4b31a07c379b2bdaaffe760451d4a766" kindref="member">face_detector</ref></type>
          <defname>face_detector</defname>
        </param>
        <param>
          <type><ref refid="namespaceface__detection_1ad74ed4d139862a3d5aa2af04b5477d35" kindref="member">output_folder</ref></type>
          <defname>output_folder</defname>
        </param>
        <param>
          <type>progress_callback</type>
          <defname>progress_callback</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="104" column="1" bodyfile="face_detection.py" bodystart="104" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespaceface__detection_1ae6add67aed2f1f4ecd1fdc60b0fe6f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>face_detection.find_matching_face</definition>
        <argsstring>(image_path, face_data, face_detector, threshold=0.5)</argsstring>
        <name>find_matching_face</name>
        <qualifiedname>face_detection.find_matching_face</qualifiedname>
        <param>
          <type>image_path</type>
          <defname>image_path</defname>
        </param>
        <param>
          <type>face_data</type>
          <defname>face_data</defname>
        </param>
        <param>
          <type><ref refid="namespaceface__detection_1a4b31a07c379b2bdaaffe760451d4a766" kindref="member">face_detector</ref></type>
          <defname>face_detector</defname>
        </param>
        <param>
          <type>threshold</type>
          <defname>threshold</defname>
          <defval>0.5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="face_detection.py" line="194" column="1" bodyfile="face_detection.py" bodystart="194" bodyend="235"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="face_detection.py" line="1" column="1"/>
  </compounddef>
</doxygen>
